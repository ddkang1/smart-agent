# Smart Agent Tools Configuration Example
# Copy this file to tools.yaml and update with your values

tools:
  think_tool:
    name: "Think Tool"
    type: "sse"
    enabled: true
    repository: "git+https://github.com/ddkang1/mcp-think-tool"  # Replace with your repository
    url: "http://localhost:8001/sse"
    description: "Enables the agent to pause, reflect, and ground its reasoning process"
    module: "mcp_think_tool"
    server_module: "mcp_think_tool.server"
    launch_cmd: "uvx"
    
  search_tool:
    name: "Search Tool"
    type: "sse"
    enabled: true
    repository: "git+https://github.com/ddkang1/ddg-mcp"  # Replace with your repository
    url: "http://localhost:8002/sse"
    description: "Provides web search capabilities to find information online"
    module: "ddg_mcp"
    server_module: "ddg_mcp.server"
    launch_cmd: "uvx"
    
  python_tool:
    name: "Python REPL Tool"
    type: "sse"
    enabled: true
    repository: "ghcr.io/ddkang1/mcp-py-repl:latest"  # Replace with your Docker image
    url: "http://python-tool:8000/sse"  # Use the service name in docker-compose
    description: "Allows execution of Python code in a secure environment"
    container: true
    launch_cmd: "docker"
    storage_path: "python_repl_storage"  # Local storage path for the tool

# Tool configuration schema
# Each tool should have:
# - name: Human-readable name (required)
# - type: Tool type, e.g., "sse" or "stdio" (required)
# - enabled: Whether the tool is enabled (required)
# - repository: Git repository or Docker image (required)
# - url: URL to access the tool (required)
# - description: Human-readable description (optional)
# - module: Python module name (for Python tools)
# - server_module: Module to run for the server (for Python tools)
# - container: Set to true if the tool runs in a Docker container
# - launch_cmd: Command to launch the tool (one of: "docker", "uvx", "npx")
# - storage_path: Path for tool data storage (for Docker container tools)
